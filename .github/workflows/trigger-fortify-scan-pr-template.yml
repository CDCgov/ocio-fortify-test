# Fortify Scan On Pull Request Template
#
# This workflow exists as a template to be copied to your CDCGov repository, to integrate automated Fortify Scanning on Pull Requests.
# It may be necessary to modify this template to suit your specific respository's needs.
# This template repository scans a trivial python hello-world application as a reference example.
# Please see the documentation at https://github.com/cdcent/ocio-fortify for more info

name: Trigger Fortify Code Scan On Pull Request Workflow

defaults:
  run:
    shell: bash

on:
  pull_request: 
    types: [opened, reopened, synchronize]
    branches: [main] # may be changed to 'develop' or similar as necessary

permissions:
  contents: read
  pull-requests: write # required for `comment-summary-in-pr`
      
jobs:
  invoke-manual-code-scan:
    environment: dev
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    #future TODO: this can probably be improved or done better
    - name: Gen GitHub App Access Token For Manual Trigger
      id: github-app-token
      run: |
        pwd; ls -la; git clone https://github.com/kave/github-app-token.git
        pwd; ls -la; cd github-app-token
        pwd; ls -la; sudo gem install jwt
        pwd; ls -la; echo "${{ secrets.CDC_COE_BOTFREY_PEM }}" > app-private-key.pem
        pwd; ls -la; chmod +x ./get-github-app-access-token.sh;
        pwd; ls -la; . ./get-github-app-access-token.sh;
        pwd; ls -la; echo "access_token=${TOKEN}" >> "$GITHUB_ENV"
                    
    - name: List unique top-level directories of changed files
      id: get-dirs-to-scan
      run: |
        unique_paths=$(python3 tools/codeScan/gitDiffAnalysis.py '${{ env.nestedFolders }}')
        echo "dirs=$unique_paths" >> $GITHUB_OUTPUT

    - name: Dispatch Remote Code Scan Event 
      id: manual-devops-workflow-dispatch
      uses: aurelien-baudet/workflow-dispatch@v2.1.1
      with:
        workflow: 'fortify-scan-pull-request.yml'
        repo: cdcent/ocio-fortify
        token: ${{ env.access_token }}
        inputs: '{ "pathsToScan": ${{ steps.get-dirs-to-scan.outputs.dirs }}, "repositoryToScan": "${{ github.repository }}", "prToScan": "${{ github.head_ref || github.ref_name }}" }'
        ref: 'edso-525/test-etc' #TODO clean this up before merging
        wait-for-completion: true
        wait-for-completion-timeout: 120m
        wait-for-completion-interval: 300s
        display-workflow-run-url: true  
